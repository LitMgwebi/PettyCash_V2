// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PettyCashPrototype.Models;

#nullable disable

namespace PettyCashPrototype.Migrations
{
    [DbContext(typeof(PettyCashPrototypeContext))]
    [Migration("20240805085321_AddNoteToTransaction")]
    partial class AddNoteToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c303538f-3fd6-4fc1-974c-d94c07ba1391",
                            Name = "Super_User",
                            NormalizedName = "Super_User"
                        },
                        new
                        {
                            Id = "37ce7a5a-9260-405c-9dd0-b8f4a32156fd",
                            Name = "Manager",
                            NormalizedName = "Manager"
                        },
                        new
                        {
                            Id = "68d5c727-9ae8-401a-8c2c-1cebb5e78735",
                            Name = "GM_Manager",
                            NormalizedName = "GM_Manager"
                        },
                        new
                        {
                            Id = "1a69126a-3658-44b3-9b2b-1732d0ce9e1a",
                            Name = "ICT_Admin",
                            NormalizedName = "ICT_Admin"
                        },
                        new
                        {
                            Id = "24e9d163-c600-42db-92ca-594fdc639e58",
                            Name = "Cashier",
                            NormalizedName = "Cashier"
                        },
                        new
                        {
                            Id = "f50b76c7-3bba-4edb-93d4-eef4af92a9ab",
                            Name = "HR_Admin",
                            NormalizedName = "HR_Admin"
                        },
                        new
                        {
                            Id = "fd1d6d8f-9e0f-49e1-a569-746fc8eaa6f6",
                            Name = "Finance_Admin",
                            NormalizedName = "Finance_Admin"
                        },
                        new
                        {
                            Id = "b139cc03-eb14-45a2-a560-8415006211a1",
                            Name = "PA_Admin",
                            NormalizedName = "PA_Admin"
                        },
                        new
                        {
                            Id = "bd88b1a9-2e95-4167-88d2-7c0d6b204f44",
                            Name = "CEO_Admin",
                            NormalizedName = "CEO_Admin"
                        },
                        new
                        {
                            Id = "6bd427b1-62c9-425b-86ed-a1f69d2d570b",
                            Name = "SCM_Admin",
                            NormalizedName = "SCM_Admin"
                        },
                        new
                        {
                            Id = "b69328a6-ad18-4ae3-bc96-a69816cd3a1d",
                            Name = "Employee",
                            NormalizedName = "Employee"
                        },
                        new
                        {
                            Id = "3531888a-9e52-4f49-aca7-e85fe0705c33",
                            Name = "DEEC_Admin",
                            NormalizedName = "DEEC_Admin"
                        },
                        new
                        {
                            Id = "50b0ecd5-fb64-4724-9190-bc9953ccd7b5",
                            Name = "SRM_Admin",
                            NormalizedName = "SRM_Admin"
                        },
                        new
                        {
                            Id = "o36538f-4lk6-4fc1-974c-d94c07ba1391",
                            Name = "Executive",
                            NormalizedName = "Executive"
                        },
                        new
                        {
                            Id = "3yt427c9-62c9-425b-86ed-a1f69d2d603k",
                            Name = "Senior Employee",
                            NormalizedName = "Senior Employee"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            IsActive = true,
                            Name = "CEO Office"
                        },
                        new
                        {
                            DepartmentId = 2,
                            IsActive = true,
                            Name = "CFO Office"
                        },
                        new
                        {
                            DepartmentId = 3,
                            IsActive = true,
                            Name = "Governance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            IsActive = true,
                            Name = "Regulatory Compliance"
                        },
                        new
                        {
                            DepartmentId = 5,
                            IsActive = true,
                            Name = "Corporate Services"
                        },
                        new
                        {
                            DepartmentId = 6,
                            IsActive = true,
                            Name = "Trade"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivisionId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DivisionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Division");

                    b.HasData(
                        new
                        {
                            DivisionId = 1,
                            DepartmentId = 4,
                            Description = "Inspectorate",
                            IsActive = true,
                            Name = "INS"
                        },
                        new
                        {
                            DivisionId = 2,
                            DepartmentId = 5,
                            Description = "Information Communication Technology",
                            IsActive = true,
                            Name = "ICT"
                        },
                        new
                        {
                            DivisionId = 3,
                            DepartmentId = 3,
                            Description = "Legal",
                            IsActive = true,
                            Name = "LEG"
                        },
                        new
                        {
                            DivisionId = 4,
                            DepartmentId = 5,
                            Description = "Human Resources",
                            IsActive = true,
                            Name = "HRE"
                        },
                        new
                        {
                            DivisionId = 6,
                            DepartmentId = 5,
                            Description = "Finance",
                            IsActive = true,
                            Name = "FIN"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("RequisitionId");

                    b.ToTable("Document");

                    b.HasDiscriminator<string>("DocumentType").HasValue("Document");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Glaccount", b =>
                {
                    b.Property<int>("GlaccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GLAccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlaccountId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<int>("MainAccountId")
                        .HasColumnType("int")
                        .HasColumnName("MainAccountID");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedsMotivation")
                        .HasColumnType("bit");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("PurposeId")
                        .HasColumnType("int")
                        .HasColumnName("PurposeID");

                    b.Property<int>("SubAccountId")
                        .HasColumnType("int")
                        .HasColumnName("SubAccountID");

                    b.HasKey("GlaccountId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MainAccountId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PurposeId");

                    b.HasIndex("SubAccountId");

                    b.ToTable("GLAccount", (string)null);
                });

            modelBuilder.Entity("PettyCashPrototype.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitle");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            Description = "CEO",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 2,
                            Description = "CFO",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 3,
                            Description = "GM: Corporate Services",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 4,
                            Description = "GM: Governance",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 5,
                            Description = "GM: Regulatory Compliance",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 6,
                            Description = "GM: Trade",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 7,
                            Description = "Manager",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 8,
                            Description = "Staff",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 9,
                            Description = "Consultant",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 10,
                            Description = "Chair Person",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 11,
                            Description = "Board Member",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 12,
                            Description = "WGM",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 13,
                            Description = "General Manager",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 14,
                            Description = "Accountant",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 15,
                            Description = "Bookkeeper",
                            IsActive = true
                        },
                        new
                        {
                            JobTitleId = 16,
                            Description = "Accounts Payable",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.MainAccount", b =>
                {
                    b.Property<int>("MainAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MainAccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainAccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainAccountId");

                    b.ToTable("MainAccount", (string)null);

                    b.HasData(
                        new
                        {
                            MainAccountId = 1,
                            AccountNumber = "2013",
                            IsActive = true,
                            Name = "Insurance"
                        },
                        new
                        {
                            MainAccountId = 2,
                            AccountNumber = "2012",
                            IsActive = true,
                            Name = "Inspection"
                        },
                        new
                        {
                            MainAccountId = 3,
                            AccountNumber = "2007",
                            IsActive = true,
                            Name = "Domestic Travel"
                        },
                        new
                        {
                            MainAccountId = 4,
                            AccountNumber = "2031",
                            IsActive = true,
                            Name = "Staff Renumeration"
                        },
                        new
                        {
                            MainAccountId = 5,
                            AccountNumber = "2017",
                            IsActive = true,
                            Name = "Legal Fees"
                        },
                        new
                        {
                            MainAccountId = 6,
                            AccountNumber = "2080",
                            IsActive = true,
                            Name = "Support Services"
                        },
                        new
                        {
                            MainAccountId = 7,
                            AccountNumber = "2038",
                            IsActive = true,
                            Name = "Training and Development"
                        },
                        new
                        {
                            MainAccountId = 8,
                            AccountNumber = "2035",
                            IsActive = true,
                            Name = "Telecommunication"
                        },
                        new
                        {
                            MainAccountId = 9,
                            AccountNumber = "2011",
                            IsActive = true,
                            Name = "Hospitality"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfficeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeId");

                    b.ToTable("Office", (string)null);

                    b.HasData(
                        new
                        {
                            OfficeId = 1,
                            Description = "Johannesburg",
                            IsActive = true,
                            Name = "JHB"
                        },
                        new
                        {
                            OfficeId = 2,
                            Description = "Kimberely",
                            IsActive = true,
                            Name = "KIM"
                        },
                        new
                        {
                            OfficeId = 3,
                            Description = "Cape Town",
                            IsActive = true,
                            Name = "CPT"
                        },
                        new
                        {
                            OfficeId = 4,
                            Description = "Durban",
                            IsActive = true,
                            Name = "DBN"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Purpose", b =>
                {
                    b.Property<int>("PurposeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PurposeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurposeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurposeId");

                    b.ToTable("Purpose", (string)null);

                    b.HasData(
                        new
                        {
                            PurposeId = 1,
                            Description = "Administration",
                            IsActive = true,
                            Name = "ADM"
                        },
                        new
                        {
                            PurposeId = 2,
                            Description = "Regulatory Compliance",
                            IsActive = true,
                            Name = "RGC"
                        },
                        new
                        {
                            PurposeId = 3,
                            Description = "Diamond Trade",
                            IsActive = true,
                            Name = "DMT"
                        },
                        new
                        {
                            PurposeId = 4,
                            IsActive = true,
                            Name = "ZZZ"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Requisition", b =>
                {
                    b.Property<int>("RequisitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequisitionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionId"));

                    b.Property<decimal>("AmountRequested")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ApplicantCode")
                        .HasColumnType("int");

                    b.Property<string>("ApplicantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ApplicantID");

                    b.Property<decimal?>("CashIssued")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Change")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ConfirmApplicantCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfirmChangeReceived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinanceApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinanceApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("FinanceApprovalID");

                    b.Property<string>("FinanceComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinanceOfficerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("FinanceOfficerID");

                    b.Property<int>("GlaccountId")
                        .HasColumnType("int")
                        .HasColumnName("GLAccountID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("IssuerID");

                    b.Property<string>("ManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ManagerID");

                    b.Property<DateTime?>("ManagerRecommendationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerRecommendationId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerApprovalID");

                    b.Property<bool>("NeedsMotivation")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptReceived")
                        .HasColumnType("bit");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalExpenses")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RequisitionId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("FinanceApprovalId");

                    b.HasIndex("FinanceOfficerId");

                    b.HasIndex("GlaccountId");

                    b.HasIndex("IssuerId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ManagerRecommendationId");

                    b.ToTable("Requisition", (string)null);
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Description = "Approved",
                            IsActive = true,
                            IsApproved = true,
                            IsRecommended = false,
                            Option = "Approve"
                        },
                        new
                        {
                            StatusId = 2,
                            Description = "Declined",
                            IsActive = true,
                            IsApproved = true,
                            IsRecommended = false,
                            Option = "Decline"
                        },
                        new
                        {
                            StatusId = 3,
                            Description = "Recommended",
                            IsActive = true,
                            IsApproved = false,
                            IsRecommended = true,
                            Option = "Recommend"
                        },
                        new
                        {
                            StatusId = 4,
                            Description = "Rejected",
                            IsActive = true,
                            IsApproved = false,
                            IsRecommended = true,
                            Option = "Reject"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.SubAccount", b =>
                {
                    b.Property<int>("SubAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubAccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubAccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubAccountId");

                    b.ToTable("SubAccount", (string)null);

                    b.HasData(
                        new
                        {
                            SubAccountId = 1,
                            AccountNumber = "0206",
                            IsActive = true,
                            Name = "IT Audit"
                        },
                        new
                        {
                            SubAccountId = 2,
                            AccountNumber = "0045",
                            IsActive = true,
                            Name = "Meeting Fees"
                        },
                        new
                        {
                            SubAccountId = 3,
                            AccountNumber = "0001",
                            IsActive = true,
                            Name = "Accomodation"
                        },
                        new
                        {
                            SubAccountId = 4,
                            AccountNumber = "0006",
                            IsActive = true,
                            Name = "Basic Salaries"
                        },
                        new
                        {
                            SubAccountId = 5,
                            AccountNumber = "0034",
                            IsActive = true,
                            Name = "Housing"
                        },
                        new
                        {
                            SubAccountId = 6,
                            AccountNumber = "0101",
                            IsActive = true,
                            Name = "Membership Fees"
                        },
                        new
                        {
                            SubAccountId = 7,
                            AccountNumber = "0094",
                            IsActive = true,
                            Name = "System Support"
                        },
                        new
                        {
                            SubAccountId = 8,
                            AccountNumber = "0002",
                            IsActive = true,
                            Name = "Air travel"
                        },
                        new
                        {
                            SubAccountId = 9,
                            AccountNumber = "0066",
                            IsActive = true,
                            Name = "Shuttle and Taxi Service"
                        },
                        new
                        {
                            SubAccountId = 10,
                            AccountNumber = "0044",
                            IsActive = true,
                            Name = "Medical Aid"
                        },
                        new
                        {
                            SubAccountId = 11,
                            AccountNumber = "0010",
                            IsActive = true,
                            Name = "Cellphones and Data"
                        },
                        new
                        {
                            SubAccountId = 12,
                            AccountNumber = "0086",
                            IsActive = true,
                            Name = "Vehicle Rental"
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaultId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("RequisitionId");

                    b.HasIndex("VaultId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idnumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("OfficeId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Vault", b =>
                {
                    b.Property<int>("VaultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaultId"));

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("VaultId");

                    b.ToTable("Vault");

                    b.HasData(
                        new
                        {
                            VaultId = 1,
                            CurrentAmount = 10000m,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Motivation", b =>
                {
                    b.HasBaseType("PettyCashPrototype.Models.Document");

                    b.ToTable("Document");

                    b.HasDiscriminator().HasValue("Motivation");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Receipt", b =>
                {
                    b.HasBaseType("PettyCashPrototype.Models.Document");

                    b.ToTable("Document");

                    b.HasDiscriminator().HasValue("Receipt");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PettyCashPrototype.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Division", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.Department", "Department")
                        .WithMany("Divisions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Document", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.Requisition", "Requisition")
                        .WithMany("Documents")
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requisition");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Glaccount", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.Division", "Division")
                        .WithMany("Glaccounts")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PettyCashPrototype.Models.MainAccount", "MainAccount")
                        .WithMany("Glaccounts")
                        .HasForeignKey("MainAccountId")
                        .IsRequired()
                        .HasConstraintName("FK_GLAccount_MainAccount");

                    b.HasOne("PettyCashPrototype.Models.Office", "Office")
                        .WithMany("Glaccounts")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PettyCashPrototype.Models.Purpose", "Purpose")
                        .WithMany("Glaccounts")
                        .HasForeignKey("PurposeId")
                        .IsRequired()
                        .HasConstraintName("FK_GLAccount_Purpose");

                    b.HasOne("PettyCashPrototype.Models.SubAccount", "SubAccount")
                        .WithMany("Glaccounts")
                        .HasForeignKey("SubAccountId")
                        .IsRequired()
                        .HasConstraintName("FK_GLAccount_SubAccount");

                    b.Navigation("Division");

                    b.Navigation("MainAccount");

                    b.Navigation("Office");

                    b.Navigation("Purpose");

                    b.Navigation("SubAccount");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Requisition", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.User", "Applicant")
                        .WithMany("Applicants")
                        .HasForeignKey("ApplicantId")
                        .IsRequired()
                        .HasConstraintName("FK_Requisition_User");

                    b.HasOne("PettyCashPrototype.Models.Status", "FinanceApproval")
                        .WithMany("FinanceApprovals")
                        .HasForeignKey("FinanceApprovalId")
                        .HasConstraintName("FK_Requisition_Status1");

                    b.HasOne("PettyCashPrototype.Models.User", "FinanceOfficer")
                        .WithMany("FinanceOfficers")
                        .HasForeignKey("FinanceOfficerId")
                        .HasConstraintName("FK_Requisition_User1");

                    b.HasOne("PettyCashPrototype.Models.Glaccount", "Glaccount")
                        .WithMany("Requisitions")
                        .HasForeignKey("GlaccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Requisition_GLAccount");

                    b.HasOne("PettyCashPrototype.Models.User", "Issuer")
                        .WithMany("Issuers")
                        .HasForeignKey("IssuerId")
                        .HasConstraintName("FK_Requisition_User3");

                    b.HasOne("PettyCashPrototype.Models.User", "Manager")
                        .WithMany("Managers")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK_Requisition_User2");

                    b.HasOne("PettyCashPrototype.Models.Status", "ManagerRecommendation")
                        .WithMany("ManagerRecommendations")
                        .HasForeignKey("ManagerRecommendationId")
                        .HasConstraintName("FK_Requisition_Status");

                    b.Navigation("Applicant");

                    b.Navigation("FinanceApproval");

                    b.Navigation("FinanceOfficer");

                    b.Navigation("Glaccount");

                    b.Navigation("Issuer");

                    b.Navigation("Manager");

                    b.Navigation("ManagerRecommendation");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Transaction", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.Requisition", "Requisition")
                        .WithMany("Transactions")
                        .HasForeignKey("RequisitionId");

                    b.HasOne("PettyCashPrototype.Models.Vault", "Vault")
                        .WithMany("Transactions")
                        .HasForeignKey("VaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requisition");

                    b.Navigation("Vault");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.User", b =>
                {
                    b.HasOne("PettyCashPrototype.Models.Division", "Division")
                        .WithMany("Users")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PettyCashPrototype.Models.JobTitle", "JobTitle")
                        .WithMany("Users")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PettyCashPrototype.Models.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("JobTitle");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Department", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Division", b =>
                {
                    b.Navigation("Glaccounts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Glaccount", b =>
                {
                    b.Navigation("Requisitions");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.JobTitle", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.MainAccount", b =>
                {
                    b.Navigation("Glaccounts");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Office", b =>
                {
                    b.Navigation("Glaccounts");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Purpose", b =>
                {
                    b.Navigation("Glaccounts");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Requisition", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Status", b =>
                {
                    b.Navigation("FinanceApprovals");

                    b.Navigation("ManagerRecommendations");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.SubAccount", b =>
                {
                    b.Navigation("Glaccounts");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.User", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("FinanceOfficers");

                    b.Navigation("Issuers");

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("PettyCashPrototype.Models.Vault", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
